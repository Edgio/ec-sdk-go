// Code generated by the Code Generation Kit (CGK) using OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.
//
// Copyright 2022 Edgecast Inc., Licensed under the terms of the Apache 2.0
// license. See LICENSE file in project root for terms.

/*
Customer Origins API v3

List of API of config Customer Origin.

API version: 0.5.0
Contact: portals-streaming@edgecast.com
*/

package originv3

import (
	"encoding/json"
)

// CustomerOriginRequest struct for CustomerOriginRequest
type CustomerOriginRequest struct {
	Name NullableString `json:"name,omitempty"`
	Host string         `json:"host"`
	// Require if origin_hostname_protocol_type = 1 | 2
	Port                 *int32        `json:"port,omitempty"`
	IsPrimary            bool          `json:"is_primary"`
	GroupId              int32         `json:"group_id"`
	StorageTypeId        NullableInt32 `json:"storage_type_id,omitempty"`
	ProtocolTypeId       NullableInt32 `json:"protocol_type_id,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _CustomerOriginRequest CustomerOriginRequest

// NewCustomerOriginRequest instantiates a new CustomerOriginRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCustomerOriginRequest(host string, isPrimary bool, groupId int32) *CustomerOriginRequest {
	this := CustomerOriginRequest{}
	this.Host = host
	this.IsPrimary = isPrimary
	this.GroupId = groupId
	var storageTypeId int32 = 1
	this.StorageTypeId = NewNullableInt32(storageTypeId)
	var protocolTypeId int32 = 1
	this.ProtocolTypeId = NewNullableInt32(protocolTypeId)
	return &this
}

// NewCustomerOriginRequestWithDefaults instantiates a new CustomerOriginRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCustomerOriginRequestWithDefaults() *CustomerOriginRequest {
	this := CustomerOriginRequest{}
	var isPrimary bool = false
	this.IsPrimary = isPrimary
	var storageTypeId int32 = 1
	this.StorageTypeId = NewNullableInt32(storageTypeId)
	var protocolTypeId int32 = 1
	this.ProtocolTypeId = NewNullableInt32(protocolTypeId)
	return &this
}

// GetName returns the Name field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CustomerOriginRequest) GetName() string {
	if o == nil || o.Name.Get() == nil {
		var ret string
		return ret
	}
	return *o.Name.Get()
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CustomerOriginRequest) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Name.Get(), o.Name.IsSet()
}

// HasName returns a boolean if a field has been set.
func (o *CustomerOriginRequest) HasName() bool {
	if o != nil && o.Name.IsSet() {
		return true
	}

	return false
}

// SetName gets a reference to the given NullableString and assigns it to the Name field.
func (o *CustomerOriginRequest) SetName(v string) {
	o.Name.Set(&v)
}

// SetNameNil sets the value for Name to be an explicit nil
func (o *CustomerOriginRequest) SetNameNil() {
	o.Name.Set(nil)
}

// UnsetName ensures that no value is present for Name, not even an explicit nil
func (o *CustomerOriginRequest) UnsetName() {
	o.Name.Unset()
}

// GetHost returns the Host field value
func (o *CustomerOriginRequest) GetHost() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Host
}

// GetHostOk returns a tuple with the Host field value
// and a boolean to check if the value has been set.
func (o *CustomerOriginRequest) GetHostOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Host, true
}

// SetHost sets field value
func (o *CustomerOriginRequest) SetHost(v string) {
	o.Host = v
}

// GetPort returns the Port field value if set, zero value otherwise.
func (o *CustomerOriginRequest) GetPort() int32 {
	if o == nil || o.Port == nil {
		var ret int32
		return ret
	}
	return *o.Port
}

// GetPortOk returns a tuple with the Port field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomerOriginRequest) GetPortOk() (*int32, bool) {
	if o == nil || o.Port == nil {
		return nil, false
	}
	return o.Port, true
}

// HasPort returns a boolean if a field has been set.
func (o *CustomerOriginRequest) HasPort() bool {
	if o != nil && o.Port != nil {
		return true
	}

	return false
}

// SetPort gets a reference to the given int32 and assigns it to the Port field.
func (o *CustomerOriginRequest) SetPort(v int32) {
	o.Port = &v
}

// GetIsPrimary returns the IsPrimary field value
func (o *CustomerOriginRequest) GetIsPrimary() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsPrimary
}

// GetIsPrimaryOk returns a tuple with the IsPrimary field value
// and a boolean to check if the value has been set.
func (o *CustomerOriginRequest) GetIsPrimaryOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IsPrimary, true
}

// SetIsPrimary sets field value
func (o *CustomerOriginRequest) SetIsPrimary(v bool) {
	o.IsPrimary = v
}

// GetGroupId returns the GroupId field value
func (o *CustomerOriginRequest) GetGroupId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.GroupId
}

// GetGroupIdOk returns a tuple with the GroupId field value
// and a boolean to check if the value has been set.
func (o *CustomerOriginRequest) GetGroupIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.GroupId, true
}

// SetGroupId sets field value
func (o *CustomerOriginRequest) SetGroupId(v int32) {
	o.GroupId = v
}

// GetStorageTypeId returns the StorageTypeId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CustomerOriginRequest) GetStorageTypeId() int32 {
	if o == nil || o.StorageTypeId.Get() == nil {
		var ret int32
		return ret
	}
	return *o.StorageTypeId.Get()
}

// GetStorageTypeIdOk returns a tuple with the StorageTypeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CustomerOriginRequest) GetStorageTypeIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.StorageTypeId.Get(), o.StorageTypeId.IsSet()
}

// HasStorageTypeId returns a boolean if a field has been set.
func (o *CustomerOriginRequest) HasStorageTypeId() bool {
	if o != nil && o.StorageTypeId.IsSet() {
		return true
	}

	return false
}

// SetStorageTypeId gets a reference to the given NullableInt32 and assigns it to the StorageTypeId field.
func (o *CustomerOriginRequest) SetStorageTypeId(v int32) {
	o.StorageTypeId.Set(&v)
}

// SetStorageTypeIdNil sets the value for StorageTypeId to be an explicit nil
func (o *CustomerOriginRequest) SetStorageTypeIdNil() {
	o.StorageTypeId.Set(nil)
}

// UnsetStorageTypeId ensures that no value is present for StorageTypeId, not even an explicit nil
func (o *CustomerOriginRequest) UnsetStorageTypeId() {
	o.StorageTypeId.Unset()
}

// GetProtocolTypeId returns the ProtocolTypeId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CustomerOriginRequest) GetProtocolTypeId() int32 {
	if o == nil || o.ProtocolTypeId.Get() == nil {
		var ret int32
		return ret
	}
	return *o.ProtocolTypeId.Get()
}

// GetProtocolTypeIdOk returns a tuple with the ProtocolTypeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CustomerOriginRequest) GetProtocolTypeIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.ProtocolTypeId.Get(), o.ProtocolTypeId.IsSet()
}

// HasProtocolTypeId returns a boolean if a field has been set.
func (o *CustomerOriginRequest) HasProtocolTypeId() bool {
	if o != nil && o.ProtocolTypeId.IsSet() {
		return true
	}

	return false
}

// SetProtocolTypeId gets a reference to the given NullableInt32 and assigns it to the ProtocolTypeId field.
func (o *CustomerOriginRequest) SetProtocolTypeId(v int32) {
	o.ProtocolTypeId.Set(&v)
}

// SetProtocolTypeIdNil sets the value for ProtocolTypeId to be an explicit nil
func (o *CustomerOriginRequest) SetProtocolTypeIdNil() {
	o.ProtocolTypeId.Set(nil)
}

// UnsetProtocolTypeId ensures that no value is present for ProtocolTypeId, not even an explicit nil
func (o *CustomerOriginRequest) UnsetProtocolTypeId() {
	o.ProtocolTypeId.Unset()
}

func (o CustomerOriginRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Name.IsSet() {
		toSerialize["name"] = o.Name.Get()
	}
	if true {
		toSerialize["host"] = o.Host
	}
	if o.Port != nil {
		toSerialize["port"] = o.Port
	}
	if true {
		toSerialize["is_primary"] = o.IsPrimary
	}
	if true {
		toSerialize["group_id"] = o.GroupId
	}
	if o.StorageTypeId.IsSet() {
		toSerialize["storage_type_id"] = o.StorageTypeId.Get()
	}
	if o.ProtocolTypeId.IsSet() {
		toSerialize["protocol_type_id"] = o.ProtocolTypeId.Get()
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *CustomerOriginRequest) UnmarshalJSON(bytes []byte) (err error) {
	varCustomerOriginRequest := _CustomerOriginRequest{}

	if err = json.Unmarshal(bytes, &varCustomerOriginRequest); err == nil {
		*o = CustomerOriginRequest(varCustomerOriginRequest)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "name")
		delete(additionalProperties, "host")
		delete(additionalProperties, "port")
		delete(additionalProperties, "is_primary")
		delete(additionalProperties, "group_id")
		delete(additionalProperties, "storage_type_id")
		delete(additionalProperties, "protocol_type_id")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableCustomerOriginRequest struct {
	value *CustomerOriginRequest
	isSet bool
}

func (v NullableCustomerOriginRequest) Get() *CustomerOriginRequest {
	return v.value
}

func (v *NullableCustomerOriginRequest) Set(val *CustomerOriginRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCustomerOriginRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCustomerOriginRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCustomerOriginRequest(val CustomerOriginRequest) NullableCustomerOriginRequest {
	return NullableCustomerOriginRequest{value: &val, isSet: true}
}

func (v NullableCustomerOriginRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCustomerOriginRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
