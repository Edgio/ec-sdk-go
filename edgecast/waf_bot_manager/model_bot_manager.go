// Code generated by the Code Generation Kit (CGK) using OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.
//
// Copyright 2022 Edgecast Inc., Licensed under the terms of the Apache 2.0
// license. See LICENSE file in project root for terms.

/*
WAF API

The WAF API is a RESTful server application for managing customer configuration settings.

API version: 1.0
*/

package waf_bot_manager

import (
	"encoding/json"
)

// BotManager struct for BotManager
type BotManager struct {
	Actions *ActionObj `json:"actions,omitempty"`
	// Bot Rule Id
	BotsProdId           *string       `json:"bots_prod_id,omitempty"`
	ExceptionCookie      []string      `json:"exception_cookie,omitempty"`
	ExceptionJa3         []string      `json:"exception_ja3,omitempty"`
	ExceptionUrl         []string      `json:"exception_url,omitempty"`
	ExceptionUserAgent   []string      `json:"exception_user_agent,omitempty"`
	InspectKnownBots     *bool         `json:"inspect_known_bots,omitempty"`
	KnownBots            []KnownBotObj `json:"known_bots,omitempty"`
	CustomerId           *string       `json:"customer_id,omitempty"`
	LastModifiedDate     *string       `json:"last_modified_date,omitempty"`
	LastModifiedBy       *string       `json:"last_modified_by,omitempty"`
	Name                 *string       `json:"name,omitempty"`
	SpoofBotActionType   *string       `json:"spoof_bot_action_type,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _BotManager BotManager

// NewBotManager instantiates a new BotManager object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBotManager() *BotManager {
	this := BotManager{}
	return &this
}

// NewBotManagerWithDefaults instantiates a new BotManager object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBotManagerWithDefaults() *BotManager {
	this := BotManager{}
	return &this
}

// GetActions returns the Actions field value if set, zero value otherwise.
func (o *BotManager) GetActions() ActionObj {
	if o == nil || o.Actions == nil {
		var ret ActionObj
		return ret
	}
	return *o.Actions
}

// GetActionsOk returns a tuple with the Actions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BotManager) GetActionsOk() (*ActionObj, bool) {
	if o == nil || o.Actions == nil {
		return nil, false
	}
	return o.Actions, true
}

// HasActions returns a boolean if a field has been set.
func (o *BotManager) HasActions() bool {
	if o != nil && o.Actions != nil {
		return true
	}

	return false
}

// SetActions gets a reference to the given ActionObj and assigns it to the Actions field.
func (o *BotManager) SetActions(v ActionObj) {
	o.Actions = &v
}

// GetBotsProdId returns the BotsProdId field value if set, zero value otherwise.
func (o *BotManager) GetBotsProdId() string {
	if o == nil || o.BotsProdId == nil {
		var ret string
		return ret
	}
	return *o.BotsProdId
}

// GetBotsProdIdOk returns a tuple with the BotsProdId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BotManager) GetBotsProdIdOk() (*string, bool) {
	if o == nil || o.BotsProdId == nil {
		return nil, false
	}
	return o.BotsProdId, true
}

// HasBotsProdId returns a boolean if a field has been set.
func (o *BotManager) HasBotsProdId() bool {
	if o != nil && o.BotsProdId != nil {
		return true
	}

	return false
}

// SetBotsProdId gets a reference to the given string and assigns it to the BotsProdId field.
func (o *BotManager) SetBotsProdId(v string) {
	o.BotsProdId = &v
}

// GetExceptionCookie returns the ExceptionCookie field value if set, zero value otherwise.
func (o *BotManager) GetExceptionCookie() []string {
	if o == nil || o.ExceptionCookie == nil {
		var ret []string
		return ret
	}
	return o.ExceptionCookie
}

// GetExceptionCookieOk returns a tuple with the ExceptionCookie field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BotManager) GetExceptionCookieOk() ([]string, bool) {
	if o == nil || o.ExceptionCookie == nil {
		return nil, false
	}
	return o.ExceptionCookie, true
}

// HasExceptionCookie returns a boolean if a field has been set.
func (o *BotManager) HasExceptionCookie() bool {
	if o != nil && o.ExceptionCookie != nil {
		return true
	}

	return false
}

// SetExceptionCookie gets a reference to the given []string and assigns it to the ExceptionCookie field.
func (o *BotManager) SetExceptionCookie(v []string) {
	o.ExceptionCookie = v
}

// GetExceptionJa3 returns the ExceptionJa3 field value if set, zero value otherwise.
func (o *BotManager) GetExceptionJa3() []string {
	if o == nil || o.ExceptionJa3 == nil {
		var ret []string
		return ret
	}
	return o.ExceptionJa3
}

// GetExceptionJa3Ok returns a tuple with the ExceptionJa3 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BotManager) GetExceptionJa3Ok() ([]string, bool) {
	if o == nil || o.ExceptionJa3 == nil {
		return nil, false
	}
	return o.ExceptionJa3, true
}

// HasExceptionJa3 returns a boolean if a field has been set.
func (o *BotManager) HasExceptionJa3() bool {
	if o != nil && o.ExceptionJa3 != nil {
		return true
	}

	return false
}

// SetExceptionJa3 gets a reference to the given []string and assigns it to the ExceptionJa3 field.
func (o *BotManager) SetExceptionJa3(v []string) {
	o.ExceptionJa3 = v
}

// GetExceptionUrl returns the ExceptionUrl field value if set, zero value otherwise.
func (o *BotManager) GetExceptionUrl() []string {
	if o == nil || o.ExceptionUrl == nil {
		var ret []string
		return ret
	}
	return o.ExceptionUrl
}

// GetExceptionUrlOk returns a tuple with the ExceptionUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BotManager) GetExceptionUrlOk() ([]string, bool) {
	if o == nil || o.ExceptionUrl == nil {
		return nil, false
	}
	return o.ExceptionUrl, true
}

// HasExceptionUrl returns a boolean if a field has been set.
func (o *BotManager) HasExceptionUrl() bool {
	if o != nil && o.ExceptionUrl != nil {
		return true
	}

	return false
}

// SetExceptionUrl gets a reference to the given []string and assigns it to the ExceptionUrl field.
func (o *BotManager) SetExceptionUrl(v []string) {
	o.ExceptionUrl = v
}

// GetExceptionUserAgent returns the ExceptionUserAgent field value if set, zero value otherwise.
func (o *BotManager) GetExceptionUserAgent() []string {
	if o == nil || o.ExceptionUserAgent == nil {
		var ret []string
		return ret
	}
	return o.ExceptionUserAgent
}

// GetExceptionUserAgentOk returns a tuple with the ExceptionUserAgent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BotManager) GetExceptionUserAgentOk() ([]string, bool) {
	if o == nil || o.ExceptionUserAgent == nil {
		return nil, false
	}
	return o.ExceptionUserAgent, true
}

// HasExceptionUserAgent returns a boolean if a field has been set.
func (o *BotManager) HasExceptionUserAgent() bool {
	if o != nil && o.ExceptionUserAgent != nil {
		return true
	}

	return false
}

// SetExceptionUserAgent gets a reference to the given []string and assigns it to the ExceptionUserAgent field.
func (o *BotManager) SetExceptionUserAgent(v []string) {
	o.ExceptionUserAgent = v
}

// GetInspectKnownBots returns the InspectKnownBots field value if set, zero value otherwise.
func (o *BotManager) GetInspectKnownBots() bool {
	if o == nil || o.InspectKnownBots == nil {
		var ret bool
		return ret
	}
	return *o.InspectKnownBots
}

// GetInspectKnownBotsOk returns a tuple with the InspectKnownBots field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BotManager) GetInspectKnownBotsOk() (*bool, bool) {
	if o == nil || o.InspectKnownBots == nil {
		return nil, false
	}
	return o.InspectKnownBots, true
}

// HasInspectKnownBots returns a boolean if a field has been set.
func (o *BotManager) HasInspectKnownBots() bool {
	if o != nil && o.InspectKnownBots != nil {
		return true
	}

	return false
}

// SetInspectKnownBots gets a reference to the given bool and assigns it to the InspectKnownBots field.
func (o *BotManager) SetInspectKnownBots(v bool) {
	o.InspectKnownBots = &v
}

// GetKnownBots returns the KnownBots field value if set, zero value otherwise.
func (o *BotManager) GetKnownBots() []KnownBotObj {
	if o == nil || o.KnownBots == nil {
		var ret []KnownBotObj
		return ret
	}
	return o.KnownBots
}

// GetKnownBotsOk returns a tuple with the KnownBots field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BotManager) GetKnownBotsOk() ([]KnownBotObj, bool) {
	if o == nil || o.KnownBots == nil {
		return nil, false
	}
	return o.KnownBots, true
}

// HasKnownBots returns a boolean if a field has been set.
func (o *BotManager) HasKnownBots() bool {
	if o != nil && o.KnownBots != nil {
		return true
	}

	return false
}

// SetKnownBots gets a reference to the given []KnownBotObj and assigns it to the KnownBots field.
func (o *BotManager) SetKnownBots(v []KnownBotObj) {
	o.KnownBots = v
}

// GetCustomerId returns the CustomerId field value if set, zero value otherwise.
func (o *BotManager) GetCustomerId() string {
	if o == nil || o.CustomerId == nil {
		var ret string
		return ret
	}
	return *o.CustomerId
}

// GetCustomerIdOk returns a tuple with the CustomerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BotManager) GetCustomerIdOk() (*string, bool) {
	if o == nil || o.CustomerId == nil {
		return nil, false
	}
	return o.CustomerId, true
}

// HasCustomerId returns a boolean if a field has been set.
func (o *BotManager) HasCustomerId() bool {
	if o != nil && o.CustomerId != nil {
		return true
	}

	return false
}

// SetCustomerId gets a reference to the given string and assigns it to the CustomerId field.
func (o *BotManager) SetCustomerId(v string) {
	o.CustomerId = &v
}

// GetLastModifiedDate returns the LastModifiedDate field value if set, zero value otherwise.
func (o *BotManager) GetLastModifiedDate() string {
	if o == nil || o.LastModifiedDate == nil {
		var ret string
		return ret
	}
	return *o.LastModifiedDate
}

// GetLastModifiedDateOk returns a tuple with the LastModifiedDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BotManager) GetLastModifiedDateOk() (*string, bool) {
	if o == nil || o.LastModifiedDate == nil {
		return nil, false
	}
	return o.LastModifiedDate, true
}

// HasLastModifiedDate returns a boolean if a field has been set.
func (o *BotManager) HasLastModifiedDate() bool {
	if o != nil && o.LastModifiedDate != nil {
		return true
	}

	return false
}

// SetLastModifiedDate gets a reference to the given string and assigns it to the LastModifiedDate field.
func (o *BotManager) SetLastModifiedDate(v string) {
	o.LastModifiedDate = &v
}

// GetLastModifiedBy returns the LastModifiedBy field value if set, zero value otherwise.
func (o *BotManager) GetLastModifiedBy() string {
	if o == nil || o.LastModifiedBy == nil {
		var ret string
		return ret
	}
	return *o.LastModifiedBy
}

// GetLastModifiedByOk returns a tuple with the LastModifiedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BotManager) GetLastModifiedByOk() (*string, bool) {
	if o == nil || o.LastModifiedBy == nil {
		return nil, false
	}
	return o.LastModifiedBy, true
}

// HasLastModifiedBy returns a boolean if a field has been set.
func (o *BotManager) HasLastModifiedBy() bool {
	if o != nil && o.LastModifiedBy != nil {
		return true
	}

	return false
}

// SetLastModifiedBy gets a reference to the given string and assigns it to the LastModifiedBy field.
func (o *BotManager) SetLastModifiedBy(v string) {
	o.LastModifiedBy = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *BotManager) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BotManager) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *BotManager) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *BotManager) SetName(v string) {
	o.Name = &v
}

// GetSpoofBotActionType returns the SpoofBotActionType field value if set, zero value otherwise.
func (o *BotManager) GetSpoofBotActionType() string {
	if o == nil || o.SpoofBotActionType == nil {
		var ret string
		return ret
	}
	return *o.SpoofBotActionType
}

// GetSpoofBotActionTypeOk returns a tuple with the SpoofBotActionType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BotManager) GetSpoofBotActionTypeOk() (*string, bool) {
	if o == nil || o.SpoofBotActionType == nil {
		return nil, false
	}
	return o.SpoofBotActionType, true
}

// HasSpoofBotActionType returns a boolean if a field has been set.
func (o *BotManager) HasSpoofBotActionType() bool {
	if o != nil && o.SpoofBotActionType != nil {
		return true
	}

	return false
}

// SetSpoofBotActionType gets a reference to the given string and assigns it to the SpoofBotActionType field.
func (o *BotManager) SetSpoofBotActionType(v string) {
	o.SpoofBotActionType = &v
}

func (o BotManager) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Actions != nil {
		toSerialize["actions"] = o.Actions
	}
	if o.BotsProdId != nil {
		toSerialize["bots_prod_id"] = o.BotsProdId
	}
	if o.ExceptionCookie != nil {
		toSerialize["exception_cookie"] = o.ExceptionCookie
	}
	if o.ExceptionJa3 != nil {
		toSerialize["exception_ja3"] = o.ExceptionJa3
	}
	if o.ExceptionUrl != nil {
		toSerialize["exception_url"] = o.ExceptionUrl
	}
	if o.ExceptionUserAgent != nil {
		toSerialize["exception_user_agent"] = o.ExceptionUserAgent
	}
	if o.InspectKnownBots != nil {
		toSerialize["inspect_known_bots"] = o.InspectKnownBots
	}
	if o.KnownBots != nil {
		toSerialize["known_bots"] = o.KnownBots
	}
	if o.CustomerId != nil {
		toSerialize["customer_id"] = o.CustomerId
	}
	if o.LastModifiedDate != nil {
		toSerialize["last_modified_date"] = o.LastModifiedDate
	}
	if o.LastModifiedBy != nil {
		toSerialize["last_modified_by"] = o.LastModifiedBy
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.SpoofBotActionType != nil {
		toSerialize["spoof_bot_action_type"] = o.SpoofBotActionType
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *BotManager) UnmarshalJSON(bytes []byte) (err error) {
	varBotManager := _BotManager{}

	if err = json.Unmarshal(bytes, &varBotManager); err == nil {
		*o = BotManager(varBotManager)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "actions")
		delete(additionalProperties, "bots_prod_id")
		delete(additionalProperties, "exception_cookie")
		delete(additionalProperties, "exception_ja3")
		delete(additionalProperties, "exception_url")
		delete(additionalProperties, "exception_user_agent")
		delete(additionalProperties, "inspect_known_bots")
		delete(additionalProperties, "known_bots")
		delete(additionalProperties, "customer_id")
		delete(additionalProperties, "last_modified_date")
		delete(additionalProperties, "last_modified_by")
		delete(additionalProperties, "name")
		delete(additionalProperties, "spoof_bot_action_type")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableBotManager struct {
	value *BotManager
	isSet bool
}

func (v NullableBotManager) Get() *BotManager {
	return v.value
}

func (v *NullableBotManager) Set(val *BotManager) {
	v.value = val
	v.isSet = true
}

func (v NullableBotManager) IsSet() bool {
	return v.isSet
}

func (v *NullableBotManager) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBotManager(val BotManager) NullableBotManager {
	return NullableBotManager{value: &val, isSet: true}
}

func (v NullableBotManager) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBotManager) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
