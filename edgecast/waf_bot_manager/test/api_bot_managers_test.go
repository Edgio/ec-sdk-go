/*
WAF API

Testing BotManagersApiService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package waf_bot_manager

import (
	"context"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
	"testing"
	openapiclient "github.com/GIT_USER_ID/GIT_REPO_ID"
)

func Test_waf_bot_manager_BotManagersApiService(t *testing.T) {

	configuration := openapiclient.NewConfiguration()
	apiClient := openapiclient.NewAPIClient(configuration)

	t.Run("Test BotManagersApiService CustIdBotManagerBotManagerIdDelete", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var custId string
		var botManagerId string

		httpRes, err := apiClient.BotManagersApi.CustIdBotManagerBotManagerIdDelete(context.Background(), custId, botManagerId).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test BotManagersApiService CustIdBotManagerBotManagerIdGet", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var custId string
		var botManagerId string

		resp, httpRes, err := apiClient.BotManagersApi.CustIdBotManagerBotManagerIdGet(context.Background(), custId, botManagerId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test BotManagersApiService CustIdBotManagerBotManagerIdPut", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var custId string
		var botManagerId string

		httpRes, err := apiClient.BotManagersApi.CustIdBotManagerBotManagerIdPut(context.Background(), custId, botManagerId).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test BotManagersApiService CustIdBotManagerGet", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var custId string

		resp, httpRes, err := apiClient.BotManagersApi.CustIdBotManagerGet(context.Background(), custId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test BotManagersApiService CustIdBotManagerPost", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var custId string

		resp, httpRes, err := apiClient.BotManagersApi.CustIdBotManagerPost(context.Background(), custId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}
